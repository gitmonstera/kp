import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp

@Composable
fun SettingsScreen(
    user: User,
    isDarkTheme: Boolean,
    onToggleTheme: () -> Unit,
    onSave: (User) -> Unit,
    onLogout: () -> Unit
) {
    var fullName by remember { mutableStateOf(user.fullName) }
    var email by remember { mutableStateOf(user.email) }
    var password by remember { mutableStateOf(user.password) }
    var rememberMe by remember { mutableStateOf(user.rememberMe) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(24.dp)
            .verticalScroll(rememberScrollState()),
        verticalArrangement = Arrangement.spacedBy(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", style = MaterialTheme.typography.h5)

        OutlinedTextField(
            value = fullName,
            onValueChange = { fullName = it },
            label = { Text("–§–ò–û") },
            singleLine = true
        )

        OutlinedTextField(
            value = email,
            onValueChange = { email = it },
            label = { Text("Email") },
            singleLine = true
        )

        OutlinedTextField(
            value = password,
            onValueChange = { password = it },
            label = { Text("–ü–∞—Ä–æ–ª—å") },
            singleLine = true
        )

        Row(verticalAlignment = Alignment.CenterVertically) {
            Checkbox(checked = rememberMe, onCheckedChange = { rememberMe = it })
            Text("–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è")
        }

        Button(
            onClick = {
                val updatedUser = user.copy(
                    fullName = fullName,
                    email = email,
                    password = password,
                    rememberMe = rememberMe
                )
                UserRepository.updateUser(updatedUser)
                AppPreferences.saveUserCredentials(updatedUser)
                onSave(updatedUser)
            }
        ) {
            Text("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        }

        Button(
            colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.secondary),
            onClick = {
                AppPreferences.clearCredentials()
                StatisticsRepository.clearStats(user.login)
                onLogout()
            }
        ) {
            Text("üö™ –í—ã–π—Ç–∏")
        }

        Button(
            colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.error),
            onClick = {
                UserRepository.deleteUser(user.login)
                StatisticsRepository.clearStats(user.login)
                AppPreferences.clearCredentials()
                onLogout()
            }
        ) {
            Text("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
        }

        Row(verticalAlignment = androidx.compose.ui.Alignment.CenterVertically) {
            Checkbox(checked = isDarkTheme, onCheckedChange = { onToggleTheme() })
            Text("–¢–µ–º–Ω–∞—è —Ç–µ–º–∞")
        }

        Spacer(modifier = Modifier.height(24.dp))

    }
}
